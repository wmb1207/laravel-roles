<?php

namespace Mate\Roles\Console\Commands;

use App\Models\User;
use Illuminate\Console\Command;


class PermissionsCommand extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'mate:roles {user} {--permissions=} {--roles=} {--list}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Configure a User with one or many permissions or even a complete role';

    /**
     * Execute the console command.
     */
    public function handle()
    {

        if ($this->option('list')) {
        }

        if ($this->option('find')) {
            $cliOptions = $this->input->getOptions();
            $filtered = array_filter(
                $cliOptions,
                fn ($option) => in_array($option, ['name' ,'description', 'id']) && $cliOptions[$option],
                ARRAY_FILTER_USE_KEY
            );

            $this->info($this->service->find($filtered));
            return;
        }

        $options = [ModelsFeatureFlag::withName($this->option('name'))];
        $options = $this->option('description') ? array_merge($options, [
            ModelsFeatureFlag::withDescription($this->option('description')),
        ]) : $options;

        $options = $this->option('enable') ? array_merge($options, [
            ModelsFeatureFlag::withStatus(true),
        ]) : $options;

        $this->info($this->service->new($options));
    }


}
